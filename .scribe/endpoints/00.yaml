name: Authentication
description: |-

  Endpoints for user authentication.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoints for user authentication.
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      username:
        name: username
        description: 'The username.'
        required: true
        example: johndoe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country:
        name: country
        description: 'Must not be greater than 255 characters.'
        required: false
        example: qvifykhqhxluiehv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: 'The email address.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password.'
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation.'
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      username: johndoe
      country: qvifykhqhxluiehv
      email: johndoe@example.com
      password: password
      password_confirmation: password
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Registration successful.",
            ...
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoints for user authentication.
      subgroup: ''
      subgroupDescription: ''
      title: 'Login a user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password.'
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: johndoe@example.com
      password: password
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Login successful.",
            ...
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Invalid credentials."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoints for user authentication.
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout the authenticated user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Logout successful."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
